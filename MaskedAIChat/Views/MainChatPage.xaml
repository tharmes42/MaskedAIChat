<Page
    x:Class="MaskedAIChat.Views.MainChatPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:helpers="using:MaskedAIChat.Helpers" 
    xmlns:models="using:MaskedAIChat.Models" 
    mc:Ignorable="d">

     <Page.Resources>
        <!-- Data template used: -->
        <!-- The data template is bound to a custom DataType called Message. -->
        <!-- Each Message object has a color and alignment assigned to it based on whether it was
sent or received, and those values are bound in the DataTemplate.-->
        <DataTemplate x:Key="MessageViewTemplate" x:DataType="models:MessageItem">
            <Grid Height="Auto" Margin="4" HorizontalAlignment="{x:Bind MsgAlignment}">
                <StackPanel MinHeight="75" Width="600" Padding="10, 0, 0, 10" Background="{ThemeResource SystemColorHighlightColor}" CornerRadius="{StaticResource ControlCornerRadius}">
                    <TextBlock Text="{x:Bind MsgText}" Padding="0, 10, 0, 0" FontSize="16" Foreground="{ThemeResource SystemColorHighlightTextColor}" TextWrapping="WrapWholeWords"/>
                    <TextBlock Text="{x:Bind MsgDateTime}" Padding="0, 0, 0, 10" FontSize="12" Foreground="{ThemeResource SystemColorHighlightTextColor}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>   
    <!--RichEditBoxExtension.PlainText is created at runtime-->

    <Grid x:Name="ContentArea">
        <StackPanel>
            <TextBlock x:Uid="MainChat_ChatCompletionText_Header" Style="{ThemeResource SubtitleTextBlockStyle}" />
            <TextBlock x:Name="MainChat_ChatCompletionText" Height="100" Text="{x:Bind ViewModel.ChatCompletionText, Mode=OneWay}" />


       
            
            <TextBlock x:Uid="MainChat_ChatText_Header" Style="{ThemeResource SubtitleTextBlockStyle}" />
            <RichEditBox x:Name="MainChat_ChatText"
                helpers:RichEditBoxExtension.PlainText="{x:Bind ViewModel.ChatText, Mode=TwoWay}"
                AutomationProperties.Name="Chat Text"
                Height="100"
                Loaded="MainChat_ChatText_Loaded"
                Unloaded="MainChat_ChatText_Unloaded"
                SelectionChanged="MainChat_ChatText_SelectionChanged"
                Paste="MainChat_ChatText_Paste"
                        
                         
                         />
            
            <!--<RichEditBox x:Name="MainChat_ChatText"
                local:RichEditBoxExtension.PlainText="{Binding ChatText, Mode=TwoWay}"
                AutomationProperties.Name="Chat Text"
                Width="800" Height="200"
                Loaded="MainChat_ChatText_Loaded"
                Unloaded="MainChat_ChatText_Unloaded"
                TextChanged="MainChat_ChatText_TextChanged"
                SelectionChanged="MainChat_ChatText_SelectionChanged"
                Paste="MainChat_ChatText_Paste"
                        
                         
                         />-->

            <!--Maybe using https://stackoverflow.com/questions/343468/richtextbox-wpf-binding makes sense here-->
            
            <!--<RichEditBox x:Name="REBDestination"
                Width="800" Height="300"   
            />-->
            <Button x:Name="SendButton" Style="{StaticResource AccentButtonStyle}" Content="Send" Click="MainChat_SendButton_OnSend">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Enter" Modifiers="Control" />
                </Button.KeyboardAccelerators>
            </Button>

            <TextBlock x:Uid="MainChat_MaskedChatText_Header" Style="{ThemeResource SubtitleTextBlockStyle}" />
            <TextBlock x:Name="MainChat_MaskedChatText" Height="100" Text="{x:Bind ViewModel.MaskedChatText, Mode=OneWay}" />

            <!--<Rectangle Fill="SteelBlue" Height="100" Width="150"
               Stroke="Black" StrokeThickness="1" RadiusY="8" RadiusX="8"/>-->

            <TextBlock x:Uid="MainChat_ChatList_Header" Style="{ThemeResource SubtitleTextBlockStyle}" />
  
            
            <StackPanel>
                <TextBlock Margin="0 0 0 15" TextWrapping="Wrap">
                This ListView is inverted to grow from the bottom up. It's a good way to display logs or messages, with most recent at the bottom.
                </TextBlock>
                <ListView
                x:Name="InvertedListView"
                ItemsSource="{x:Bind ViewModel.MessageItems, Mode=OneWay}"
                ItemTemplate="{StaticResource MessageViewTemplate}"
                BorderThickness="1"
                BorderBrush="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                Height="400"
                SelectionMode="None">


                    <!-- The ItemsStackPanel must be edited to update the following two properties -->
                    <!-- These properties allow the list to grow from the bottom -->

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel 
                            ItemsUpdatingScrollMode="KeepLastItemInView" 
                            VerticalAlignment="Bottom"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <!-- This setter property is created so ListViewItems correctly align to the left or right. -->
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>
            </StackPanel>

        </StackPanel>
    </Grid>
</Page>
