<Page
    x:Class="MaskedAIChat.Views.MainChatPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:helpers="using:MaskedAIChat.Helpers" 
    xmlns:models="using:MaskedAIChat.Models" 
    mc:Ignorable="d">

     <Page.Resources>
        <CommandBarFlyout Placement="BottomEdgeAlignedLeft" x:Name="MessageItemFlyout">
            <!--<AppBarButton x:Uid="FlyoutElementCopy" Label="Copy" Icon="Copy" ToolTipService.ToolTip="Copy" Click="ViewModel.OnFlyoutElementClicked" />
            <AppBarButton x:Uid="FlyoutElementShare" Label="Share" Icon="Share" ToolTipService.ToolTip="Share" Click="ViewModel.OnFlyoutElementClicked" />-->
            <AppBarButton x:Uid="FlyoutElementCopy" Label="Copy" Icon="Copy"  Click="ViewModel.OnFlyoutElementClicked" >
                <!--workaround to be able to feed ToolTip from resources, see https://github.com/microsoft/microsoft-ui-xaml/issues/3649-->
                <ToolTipService.ToolTip>
                    <ToolTip x:Uid="FlyoutElementCopyToolTip" />
                </ToolTipService.ToolTip>
            </AppBarButton>

            <AppBarButton x:Uid="FlyoutElementReuse" Label="Reuse" Click="ViewModel.OnFlyoutElementClicked" >
                <!--workaround to be able to feed ToolTip from resources, see https://github.com/microsoft/microsoft-ui-xaml/issues/3649-->
                <FontIcon Glyph="&#xE752;" />
                <ToolTipService.ToolTip>
                    <ToolTip x:Uid="FlyoutElementReuseToolTip" />
                </ToolTipService.ToolTip>
            </AppBarButton>

            <AppBarButton x:Uid="FlyoutElementTranslate" Label="Translate" Click="ViewModel.OnFlyoutElementClicked" >
                <!--workaround to be able to feed ToolTip from resources, see https://github.com/microsoft/microsoft-ui-xaml/issues/3649-->
                <FontIcon Glyph="&#xF2B7;" />
                <ToolTipService.ToolTip>
                    <ToolTip x:Uid="FlyoutElementTranslateToolTip" />
                </ToolTipService.ToolTip>
            </AppBarButton>
            

            <AppBarButton x:Uid="FlyoutElementShare" Label="Share" Icon="Share"  Click="ViewModel.OnFlyoutElementClicked" >
                <ToolTipService.ToolTip>
                    <ToolTip x:Uid="FlyoutElementShareToolTip" />
                </ToolTipService.ToolTip>
            </AppBarButton>
            <!--<CommandBarFlyout.SecondaryCommands>
                <AppBarButton x:Name="ResizeButton1" Label="Resize" Click="OnElementClicked" />
                <AppBarButton x:Name="MoveButton1" Label="Move" Click="OnElementClicked" />
            </CommandBarFlyout.SecondaryCommands>-->
        </CommandBarFlyout>
         
         <!-- Data template used: -->
        <!-- The data template is bound to a custom DataType called Message. -->
        <!-- Each Message object has a color and alignment assigned to it based on whether it was
sent or received, and those values are bound in the DataTemplate.-->
        <DataTemplate x:Key="MessageViewTemplate" x:DataType="models:MessageItem">
            <Grid Height="Auto" Margin="4" HorizontalAlignment="{x:Bind MsgAlignment}">
                <StackPanel MinHeight="75" Width="600" Padding="10, 0, 0, 10" 
                            Background="{ThemeResource SystemColorHighlightColor}" 
                            CornerRadius="{StaticResource ControlCornerRadius}"
                            PointerEntered="MessageItem_PointerEntered"
                            PointerExited="MessageItem_PointerExited"
                            >
                    <!--Background="{ThemeResource SystemColorHighlightColor AccentAcrylicBackgroundFillColorBaseBrush}"-->
                    <!-- todo: winui3gallery://item/CommandBarFlyout-->
                    <!--PointerPressed=""-->
                    <TextBlock Text="{x:Bind MsgText}" Padding="0, 10, 0, 0" FontSize="16" Foreground="{ThemeResource SystemColorHighlightTextColor}" 
                               TextWrapping="WrapWholeWords"
                               IsTextSelectionEnabled="True"
                               SelectionHighlightColor="{StaticResource ControlStrongFillColorDefaultBrush}"
                               SelectionChanged="MainChat_MessageItem_SelectionChanged"
                               />
                    <!--FlyoutBase.AttachedFlyout="{StaticResource MessageItemFlyout}"-->
                    <TextBlock  Padding="0, 0, 0, 10" FontSize="12" 
                                Foreground="{ThemeResource SystemColorHighlightTextColor}"
                                >
                        <!--Text="{x:Bind MsgDateTime}{x:Bind MsgChatRole}"-->
                        <Run Text="--" /> <!-- space -->
                        <Run Text="{x:Bind MsgAuthor}" />
                        <Run Text="  "  /> <!-- space -->
                        <Run Text="{x:Bind MsgDateTime}" />
                    </TextBlock>
                </StackPanel>
            </Grid>
        </DataTemplate>


    </Page.Resources>   
    <!--RichEditBoxExtension.PlainText is created at runtime-->

    <Grid x:Name="ContentArea">


        <Grid x:Name="ChatLayoutRoot"  Width="Auto" Height="Auto"
              ColumnDefinitions="1*, 1*" RowDefinitions="Auto, 1*, Auto, 300">

            <!--Row 0-->
            <Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" 
                    Click="MainChat_ChatText_Paste" 
                    Margin="{StaticResource SmallTopBottomMargin}"
                    Style="{StaticResource AccentButtonStyle}">
                <StackPanel Orientation="Horizontal">
                    <SymbolIcon Symbol="Paste" Margin="{StaticResource SmallRightMargin}" />
                    <TextBlock x:Uid="MainChat_ChatText_MenuPasteButtonText" />

                </StackPanel>
            </Button>

            <!--Row 1-->
            <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Vertical">

                <TextBlock x:Uid="MainChat_ChatText_Header" Style="{ThemeResource SubtitleTextBlockStyle}" />
                <RichEditBox x:Name="MainChat_ChatText"
                helpers:RichEditBoxExtension.PlainText="{x:Bind ViewModel.ChatText, Mode=TwoWay}"
                AutomationProperties.Name="Chat Text"
                Height="100"
                Loaded="MainChat_ChatText_Loaded"
                Unloaded="MainChat_ChatText_Unloaded"
                SelectionChanged="MainChat_ChatText_SelectionChanged"
                Paste="MainChat_ChatText_Paste"
                Margin="{StaticResource SmallTopBottomMargin}"
                IsTextPredictionEnabled = "False"
                IsSpellCheckEnabled ="False"
                             Language="en-US"
                             PreviewKeyDown="MainChat_ChatText_PreviewKeyDown"
                         
                         />

            </StackPanel>
            <StackPanel Grid.Row="1" Grid.Column="1"  Orientation="Vertical">
                <TextBlock x:Uid="MainChat_MaskedChatText_Header" Style="{ThemeResource SubtitleTextBlockStyle}" />
                <!--https://stackoverflow.com/questions/1192335/automatic-vertical-scroll-bar-in-wpf-textblock-->
                <ScrollViewer MaxHeight="100"  
                    Width="Auto" 
                    HorizontalScrollBarVisibility="Disabled"
                    VerticalScrollBarVisibility="Auto">
                    <TextBlock x:Name="MainChat_MaskedChatText" 

                            Text="{x:Bind ViewModel.MaskedChatText, Mode=OneWay}" Margin="{StaticResource SmallTopBottomMargin}" />
                </ScrollViewer>
            </StackPanel>

            <!--Row 2-->
            
            <!--sendbutton-->
            <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                <Button x:Name="SendButton" Style="{StaticResource AccentButtonStyle}" 
                        Content="Send [Ctrl + Enter]" Click="MainChat_SendButton_Click" 
                        Margin="{StaticResource SmallRightMargin}">
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Enter" Modifiers="Control" />
                    </Button.KeyboardAccelerators>
                </Button>
            </StackPanel>
            
            
            <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                <!--clearbutton-->
                <Button x:Name="MainChat_ClearChatButton" x:Uid="MainChat_ClearChatButton" Style="{StaticResource AccentButtonStyle}" 
                        Content="Clear chat" 
                        Click="MainChat_ClearChatButton_Click" 
                        FocusDisengaged="MainChat_ClearChatButton_FocusDisengaged"
                        Margin="{StaticResource SmallLeftMargin}">
                </Button>

                <Button x:Name="MainChat_ExportChatButton" x:Uid="MainChat_ExportChatButton" Style="{StaticResource AccentButtonStyle}" 
                        Content="Export chat" 
                        Click="MainChat_ExportChatButton_Click" 
                        Margin="{StaticResource SmallLeftMargin}">
                </Button>

                <Button x:Name="MainChat_ExportLastChatButton" x:Uid="MainChat_ExportLastChatButton" Style="{StaticResource AccentButtonStyle}" 
                        Content="Export last chat" 
                        Click="MainChat_ExportLastChatButton_Click" 
                        Margin="{StaticResource SmallLeftMargin}">
                </Button>
            </StackPanel>


            <!--Row 3-->
            <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="{StaticResource SmallTopBottomMargin}">
                <ListView
                x:Name="MainChat_InvertedListView"
                ItemsSource="{x:Bind ViewModel.MessageItems, Mode=OneWay}"
                ItemTemplate="{StaticResource MessageViewTemplate}"
                BorderThickness="1"
                BorderBrush="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                Height="240"
               
                    SelectionMode="Single"
                IsItemClickEnabled="True"
                    ItemClick="MainChat_InvertedListView_Click"
                    
                    >

                    <!-- The ItemsStackPanel must be edited to update the following two properties -->
                    <!-- These properties allow the list to grow from the bottom -->

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel 
                            ItemsUpdatingScrollMode="KeepLastItemInView" 
                            VerticalAlignment="Bottom"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <!-- This setter property is created so ListViewItems correctly align to the left or right. -->
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>
            </StackPanel>

        </Grid>
    </Grid>
</Page>
