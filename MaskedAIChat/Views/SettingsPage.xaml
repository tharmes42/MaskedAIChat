<Page
    x:Class="MaskedAIChat.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:helpers="using:MaskedAIChat.Helpers"
    xmlns:xaml="using:Microsoft.UI.Xaml"
    mc:Ignorable="d">
    <Page.Resources>
        <helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    </Page.Resources>
    <Grid>
        <StackPanel
            x:Name="ContentArea">

            <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                <!--API OpenAI-->
                <TextBlock x:Uid="Settings_ApiKey_Subtitle" Style="{ThemeResource SubtitleTextBlockStyle}" />

                <PasswordBox 
                    Name="Settings_ApiKey"
                    Password="{x:Bind ViewModel.ApiKey, Mode=TwoWay}"
                    PasswordChanged="{x:Bind ViewModel.SettingChanged_SaveAsync}"
                    Margin="0,0,8,0" 
                    Width="400" 
                    HorizontalAlignment="Left"
                    PasswordRevealMode="Hidden" 
                    AutomationProperties.Name="API Key" 
                    />
                
                <TextBlock x:Uid="Settings_ApiKey_Help" Margin="{StaticResource XSmallTopMargin}" Style="{ThemeResource BodyTextBlockStyle}" />
                <HyperlinkButton x:Uid="Settings_ApiKey_Link" Margin="{StaticResource SettingsPageHyperlinkButtonMargin}" />
                
                <!--TextBox for system prompt-->
                <TextBlock x:Uid="Settings_ChatSystemPrompt_Label" Margin="{StaticResource XSmallTopMargin}" Style="{ThemeResource BodyTextBlockStyle}" />
                <TextBox Name="Settings_ChatSystemPrompt" TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                             MinWidth="400" Text="{x:Bind ViewModel.ChatSystemPrompt, Mode=TwoWay}" PlaceholderText="You are a helpful assistant." TextChanged="{x:Bind ViewModel.SettingChanged_SaveAsync}"/>

                <!--API Deepl-->
                <TextBlock x:Uid="Settings_DeeplApiKey_Subtitle" Style="{ThemeResource SubtitleTextBlockStyle}" />
                <PasswordBox 
                    Name="Settings_DeeplApiKey"
                    Password="{x:Bind ViewModel.DeeplApiKey, Mode=TwoWay}"
                    PasswordChanged="{x:Bind ViewModel.SettingChanged_SaveAsync}"
                    Margin="0,0,8,0" 
                    Width="400" 
                    HorizontalAlignment="Left"
                    PasswordRevealMode="Hidden" 
                    AutomationProperties.Name="Deepl API Key" 
                    />

                <TextBlock x:Uid="Settings_DeeplApiKey_Help" Margin="{StaticResource XSmallTopMargin}" Style="{ThemeResource BodyTextBlockStyle}" />
                <HyperlinkButton x:Uid="Settings_DeeplApiKey_Link" Margin="{StaticResource SettingsPageHyperlinkButtonMargin}" />

                <CheckBox Name="RevealModeCheckBox" x:Uid="Settings_RevealModeCheckBox" IsChecked="False"
                    Checked="RevealModeCheckbox_Changed" Unchecked="RevealModeCheckbox_Changed"/>


            </StackPanel>

            <TextBlock x:Uid="Settings_Personalization" Style="{ThemeResource SubtitleTextBlockStyle}" />

            <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                    <RadioButton
                        x:Uid="Settings_Theme_Light"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Light</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton
                        x:Uid="Settings_Theme_Dark"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Dark</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton
                        x:Uid="Settings_Theme_Default"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Default</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                
            </StackPanel>

            <TextBlock x:Uid="Settings_About" Style="{ThemeResource SubtitleTextBlockStyle}" />

            <StackPanel Margin="{StaticResource XSmallTopMargin}">
                <TextBlock Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" Style="{ThemeResource BodyTextBlockStyle}" />

                <TextBlock
                    x:Uid="Settings_AboutDescription"
                    Margin="{StaticResource XSmallTopMargin}"
                    Style="{ThemeResource BodyTextBlockStyle}" />
                <HyperlinkButton x:Uid="SettingsPage_PrivacyTermsLink" Margin="{StaticResource SettingsPageHyperlinkButtonMargin}" />
            </StackPanel>
        </StackPanel>
    </Grid>
</Page>
